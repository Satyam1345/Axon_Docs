server {
  listen 8080;
  server_name _;

  # Static public assets (including PDFs)
  root /app/frontend/public;

  # Serve runtime env JS generated at startup
  location = /runtime-env.js {
    alias /usr/share/nginx/html/runtime-env.js;
    add_header Cache-Control "no-store";
  }

  # Serve Next.js statics directly
  location ^~ /_next/static/ {
    alias /app/frontend/.next/static/;
    access_log off;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  # Serve /pdfs via filesystem for simple access
  location ^~ /pdfs/ {
    alias /app/frontend/public/pdfs/;
    add_header Cache-Control "public, max-age=604800";
  }

  # Route Next API (generate-*) to Next server
  # Prefer exact matches for clarity and to avoid prefix overrides
  location = /api/generate-insights {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  location = /api/generate-overview-insights {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  location = /api/generate-podcast {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  location = /api/generate-overview-podcast {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Fallback regex for any accidental trailing slash variants
  location ~* ^/api/(generate-(podcast|overview-podcast|insights|overview-insights))/?$ {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Other backend API routes -> Express on 5001 (do not use ^~ so regex/exact can win)
  location /api/ {
    proxy_pass http://127.0.0.1:5001;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Everything else -> Next server
  location / {
    try_files $uri @next;
  }
  location @next {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
